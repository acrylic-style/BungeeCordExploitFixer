package xyz.acrylicstyle.bcExploitFixer.transformers;

import javassist.ClassPool;
import javassist.CtClass;
import javassist.CtMethod;
import xyz.acrylicstyle.bcExploitFixer.BungeeCordExploitFixer;

import java.lang.instrument.ClassFileTransformer;
import java.security.ProtectionDomain;

import static xyz.acrylicstyle.bcExploitFixer.BungeeCordExploitFixer.info;

public class NullPacketTransformer implements ClassFileTransformer {
    public int transformed = 0;
    public final int max = 2;

    @Override
    public byte[] transform(ClassLoader loader, String className, Class<?> classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) {
        if (!className.equals("net/md_5/bungee/ServerConnector") && !className.equals("net/md_5/bungee/connection/InitialHandler")) return null;
        try {
            ClassPool cp = ClassPool.getDefault();
            CtClass cc = cp.get(className.replace("/", "."));
            CtMethod method = cc.getDeclaredMethod("handle", new CtClass[]{cp.get("net.md_5.bungee.protocol.PacketWrapper")});
            method.insertBefore(
                    "        if ($1.packet == null) {\n" +
                        "            this.ch.close();\n" +
                        "            " + (BungeeCordExploitFixer.verbose ? "" : "//") + "bungee.getLogger().info(\"Closed connection from \" + this.ch.getHandle());\n" +
                        "        }");
            byte[] buf = cc.toBytecode();
            cc.detach();
            info("Transformed " + className, ++transformed, max);
            return buf;
        } catch (Throwable e) {
            info("encountered error during transforming " + className + " - " + e.getClass().getSimpleName() + ": " + e.getMessage());
            e.printStackTrace(System.out);
            throw new RuntimeException(e);
        }
    }
}
